digraph "src/core/array.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/core/array.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Provides the array class for a fixed-size container with random access."];
  Node1 -> Node2 [id="edge29_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="src/core/bitSet.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bit_set_8h.html",tooltip="BitSet class declaration."];
  Node2 -> Node3 [id="edge30_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="src/core/core.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$core_8h.html",tooltip="Core module header file."];
  Node3 -> Node4 [id="edge31_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/original.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8h.html",tooltip="Main header file for Original."];
  Node4 -> Node5 [id="edge32_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="src/original.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8cpp.html",tooltip="Original Library main file."];
  Node1 -> Node6 [id="edge33_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="src/core/chain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$chain_8h.html",tooltip="Non-cyclic doubly linked list implementation."];
  Node6 -> Node3 [id="edge34_Node000006_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge35_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="src/core/deque.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$deque_8h.html",tooltip="Double-ended queue (deque) container adapter implementation."];
  Node7 -> Node3 [id="edge36_Node000007_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node8 [id="edge37_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="src/core/filterStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$filter_stream_8h.html",tooltip="Composite filter operations with logical chaining."];
  Node8 -> Node3 [id="edge38_Node000008_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node9 [id="edge39_Node000006_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="src/core/queue.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$queue_8h.html",tooltip="Queue container adapter implementation."];
  Node9 -> Node3 [id="edge40_Node000009_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node10 [id="edge41_Node000006_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="src/core/stack.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stack_8h.html",tooltip="Stack container adapter implementation."];
  Node10 -> Node3 [id="edge42_Node000010_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node11 [id="edge43_Node000006_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="src/core/transformStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$transform_stream_8h.html",tooltip="Transform pipeline composition and execution."];
  Node11 -> Node3 [id="edge44_Node000011_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge45_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge46_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="src/core/forwardChain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward_chain_8h.html",tooltip="Non-cyclic singly linked list implementation."];
  Node12 -> Node3 [id="edge47_Node000012_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge48_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="src/core/vector.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector_8h.html",tooltip="Dynamic array container with automatic resizing."];
  Node13 -> Node14 [id="edge49_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="src/core/algorithms.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8h.html",tooltip="Standard algorithm implementations for iterator-based containers."];
  Node14 -> Node3 [id="edge50_Node000014_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node15 [id="edge51_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="src/core/prique.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$prique_8h.html",tooltip="Priority queue container implementation."];
  Node15 -> Node3 [id="edge52_Node000015_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node16 [id="edge53_Node000013_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="src/core/blocksList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$blocks_list_8h.html",tooltip="A block-based list implementation."];
  Node16 -> Node3 [id="edge54_Node000016_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node15 [id="edge55_Node000016_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node3 [id="edge56_Node000013_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
}

digraph "src/core/printable.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/core/printable.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Interface for polymorphic string formatting and output."];
  Node1 -> Node2 [id="edge75_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="src/core/autoPtr.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$auto_ptr_8h.html",tooltip="Base class for reference-counted smart pointers."];
  Node2 -> Node3 [id="edge76_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="src/core/core.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$core_8h.html",tooltip="Core module header file."];
  Node3 -> Node4 [id="edge77_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/original.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8h.html",tooltip="Main header file for Original."];
  Node4 -> Node5 [id="edge78_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="src/original.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8cpp.html",tooltip="Original Library main file."];
  Node2 -> Node6 [id="edge79_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="src/core/ownerPtr.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$owner_ptr_8h.html",tooltip="Exclusive-ownership smart pointer implementation."];
  Node6 -> Node3 [id="edge80_Node000006_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node7 [id="edge81_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="src/core/refCntPtr.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ref_cnt_ptr_8h.html",tooltip="Reference-counted smart pointer hierarchy."];
  Node7 -> Node3 [id="edge82_Node000007_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge83_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="src/core/containerAdapter.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container_adapter_8h.html",tooltip="Base class for container adapters with common interfaces."];
  Node8 -> Node3 [id="edge84_Node000008_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge85_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="src/core/deque.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$deque_8h.html",tooltip="Double-ended queue (deque) container adapter implementation."];
  Node9 -> Node3 [id="edge86_Node000009_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node10 [id="edge87_Node000008_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="src/core/prique.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$prique_8h.html",tooltip="Priority queue container implementation."];
  Node10 -> Node3 [id="edge88_Node000010_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node11 [id="edge89_Node000008_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="src/core/queue.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$queue_8h.html",tooltip="Queue container adapter implementation."];
  Node11 -> Node3 [id="edge90_Node000011_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node12 [id="edge91_Node000008_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="src/core/stack.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stack_8h.html",tooltip="Stack container adapter implementation."];
  Node12 -> Node3 [id="edge92_Node000012_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge93_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge94_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="src/core/couple.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$couple_8h.html",tooltip="Generic pair container implementation."];
  Node13 -> Node14 [id="edge95_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="src/core/bitSet.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bit_set_8h.html",tooltip="BitSet class declaration."];
  Node14 -> Node3 [id="edge96_Node000014_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node15 [id="edge97_Node000013_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="src/core/blocksList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$blocks_list_8h.html",tooltip="A block-based list implementation."];
  Node15 -> Node3 [id="edge98_Node000015_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node10 [id="edge99_Node000015_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node3 [id="edge100_Node000013_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node16 [id="edge101_Node000013_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="src/core/tuple.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$tuple_8h.html",tooltip="Heterogeneous tuple container implementation."];
  Node16 -> Node3 [id="edge102_Node000016_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge103_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="src/core/iterationStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iteration_stream_8h.html",tooltip="Provides functionality for an iteration stream."];
  Node17 -> Node18 [id="edge104_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="src/core/array.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$array_8h.html",tooltip="Provides the array class for a fixed-size container with random access."];
  Node18 -> Node14 [id="edge105_Node000018_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node19 [id="edge106_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="src/core/chain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$chain_8h.html",tooltip="Non-cyclic doubly linked list implementation."];
  Node19 -> Node3 [id="edge107_Node000019_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node9 [id="edge108_Node000019_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node20 [id="edge109_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="src/core/filterStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$filter_stream_8h.html",tooltip="Composite filter operations with logical chaining."];
  Node20 -> Node3 [id="edge110_Node000020_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node11 [id="edge111_Node000019_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node12 [id="edge112_Node000019_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node21 [id="edge113_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="src/core/transformStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$transform_stream_8h.html",tooltip="Transform pipeline composition and execution."];
  Node21 -> Node3 [id="edge114_Node000021_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node3 [id="edge115_Node000018_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node22 [id="edge116_Node000018_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="src/core/forwardChain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward_chain_8h.html",tooltip="Non-cyclic singly linked list implementation."];
  Node22 -> Node3 [id="edge117_Node000022_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node23 [id="edge118_Node000018_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="src/core/vector.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector_8h.html",tooltip="Dynamic array container with automatic resizing."];
  Node23 -> Node24 [id="edge119_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="src/core/algorithms.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8h.html",tooltip="Standard algorithm implementations for iterator-based containers."];
  Node24 -> Node3 [id="edge120_Node000024_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node10 [id="edge121_Node000024_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node15 [id="edge122_Node000023_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node3 [id="edge123_Node000023_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node14 [id="edge124_Node000017_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge125_Node000017_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node3 [id="edge126_Node000017_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node23 [id="edge127_Node000017_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge128_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="src/core/iterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iterator_8h.html",tooltip="Defines the iterator class for traversing and manipulating container elements."];
  Node25 -> Node24 [id="edge129_Node000025_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node3 [id="edge130_Node000025_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node26 [id="edge131_Node000025_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="src/core/iterable.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iterable_8h.html",tooltip="Base interface for iterable container types."];
  Node26 -> Node3 [id="edge132_Node000026_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node17 [id="edge133_Node000026_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node27 [id="edge134_Node000025_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="src/core/randomAccessIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$random_access_iterator_8h.html",tooltip="Base class for random-access iterators."];
  Node27 -> Node18 [id="edge135_Node000027_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node3 [id="edge136_Node000027_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node28 [id="edge137_Node000025_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="src/core/stepIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$step_iterator_8h.html",tooltip="Step iterator base class for single-step iterators."];
  Node28 -> Node3 [id="edge138_Node000028_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node29 [id="edge139_Node000028_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="src/core/doubleDirection\lIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$double_direction_iterator_8h.html",tooltip="Double-direction iterator base class."];
  Node29 -> Node19 [id="edge140_Node000029_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node3 [id="edge141_Node000029_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node30 [id="edge142_Node000028_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="src/core/singleDirection\lIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$single_direction_iterator_8h.html",tooltip="Single-direction iterator base class."];
  Node30 -> Node3 [id="edge143_Node000030_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node22 [id="edge144_Node000030_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge145_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge146_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="src/core/wrapper.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$wrapper_8h.html",tooltip="Abstract polymorphic container with value encapsulation and navigation support."];
  Node31 -> Node3 [id="edge147_Node000031_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node28 [id="edge148_Node000031_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
}

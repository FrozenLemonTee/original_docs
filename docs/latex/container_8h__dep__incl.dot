digraph "src/core/container.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/core/container.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Abstract base class for container types."];
  Node1 -> Node2 [id="edge61_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="src/core/core.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$core_8h.html",tooltip="Core module header file."];
  Node2 -> Node3 [id="edge62_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="src/original.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8h.html",tooltip="Main header file for Original."];
  Node3 -> Node4 [id="edge63_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/original.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8cpp.html",tooltip="Original Library main file."];
  Node1 -> Node5 [id="edge64_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="src/core/randomAccessIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$random_access_iterator_8h.html",tooltip="Base class for random-access iterators."];
  Node5 -> Node6 [id="edge65_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="src/core/array.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$array_8h.html",tooltip="Provides the array class for a fixed-size container with random access."];
  Node6 -> Node7 [id="edge66_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="src/core/bitSet.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bit_set_8h.html",tooltip="BitSet class declaration."];
  Node7 -> Node2 [id="edge67_Node000007_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node8 [id="edge68_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="src/core/chain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$chain_8h.html",tooltip="Non-cyclic doubly linked list implementation."];
  Node8 -> Node2 [id="edge69_Node000008_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge70_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="src/core/deque.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$deque_8h.html",tooltip="Double-ended queue (deque) container adapter implementation."];
  Node9 -> Node2 [id="edge71_Node000009_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node10 [id="edge72_Node000008_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="src/core/filterStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$filter_stream_8h.html",tooltip="Composite filter operations with logical chaining."];
  Node10 -> Node2 [id="edge73_Node000010_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node11 [id="edge74_Node000008_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="src/core/queue.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$queue_8h.html",tooltip="Queue container adapter implementation."];
  Node11 -> Node2 [id="edge75_Node000011_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node12 [id="edge76_Node000008_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="src/core/stack.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stack_8h.html",tooltip="Stack container adapter implementation."];
  Node12 -> Node2 [id="edge77_Node000012_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node13 [id="edge78_Node000008_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="src/core/transformStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$transform_stream_8h.html",tooltip="Transform pipeline composition and execution."];
  Node13 -> Node2 [id="edge79_Node000013_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node2 [id="edge80_Node000006_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node14 [id="edge81_Node000006_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="src/core/forwardChain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward_chain_8h.html",tooltip="Non-cyclic singly linked list implementation."];
  Node14 -> Node2 [id="edge82_Node000014_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node15 [id="edge83_Node000006_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="src/core/vector.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector_8h.html",tooltip="Dynamic array container with automatic resizing."];
  Node15 -> Node16 [id="edge84_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="src/core/algorithms.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8h.html",tooltip="Standard algorithm implementations for iterator-based containers."];
  Node16 -> Node2 [id="edge85_Node000016_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node17 [id="edge86_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="src/core/prique.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$prique_8h.html",tooltip="Priority queue container implementation."];
  Node17 -> Node2 [id="edge87_Node000017_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node18 [id="edge88_Node000015_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="src/core/blocksList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$blocks_list_8h.html",tooltip="A block-based list implementation."];
  Node18 -> Node2 [id="edge89_Node000018_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node17 [id="edge90_Node000018_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node2 [id="edge91_Node000015_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node2 [id="edge92_Node000005_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node19 [id="edge93_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="src/core/serial.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8h.html",tooltip="Defines an abstract base class for sequential containers with index-based access."];
  Node19 -> Node20 [id="edge94_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="src/core/baseArray.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$base_array_8h.html",tooltip="Provides a base class for fixed-size serial containers."];
  Node20 -> Node6 [id="edge95_Node000020_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node2 [id="edge96_Node000020_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node21 [id="edge97_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="src/core/baseList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$base_list_8h.html",tooltip="Provides a base class for variable-size serial containers."];
  Node21 -> Node18 [id="edge98_Node000021_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node8 [id="edge99_Node000021_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node22 [id="edge100_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="src/core/containerAdapter.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container_adapter_8h.html",tooltip="Base class for container adapters with common interfaces."];
  Node22 -> Node2 [id="edge101_Node000022_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node9 [id="edge102_Node000022_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node17 [id="edge103_Node000022_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node11 [id="edge104_Node000022_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node12 [id="edge105_Node000022_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node2 [id="edge106_Node000021_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node14 [id="edge107_Node000021_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node23 [id="edge108_Node000021_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="src/core/transform.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$transform_8h.html",tooltip="Transformation classes for various operations on elements."];
  Node23 -> Node2 [id="edge109_Node000023_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node24 [id="edge110_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="src/core/iterable.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iterable_8h.html",tooltip="Base interface for iterable container types."];
  Node24 -> Node2 [id="edge111_Node000024_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node25 [id="edge112_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="src/core/iterationStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iteration_stream_8h.html",tooltip="Provides functionality for an iteration stream."];
  Node25 -> Node6 [id="edge113_Node000025_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node7 [id="edge114_Node000025_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node8 [id="edge115_Node000025_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node2 [id="edge116_Node000025_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node15 [id="edge117_Node000025_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node13 [id="edge118_Node000023_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node15 [id="edge119_Node000021_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node2 [id="edge120_Node000019_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
}

digraph "src/original.cpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/original.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Original Library main file."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="original.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$original_8h.html",tooltip="Main header file for Original."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="core/core.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$core_8h.html",tooltip="Core module header file."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="algorithms.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8h.html",tooltip="Standard algorithm implementations for iterator-based containers."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="functional",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="cmath",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node7 [id="edge6_Node000004_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="vector.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector_8h.html",tooltip="Dynamic array container with automatic resizing."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="baseList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$base_list_8h.html",tooltip="Provides a base class for variable-size serial containers."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="serial.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8h.html",tooltip="Defines an abstract base class for sequential containers with index-based access."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="container.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container_8h.html",tooltip="Abstract base class for container types."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="config.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$config_8h.html",tooltip="Platform-independent integer type definitions."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="cstdint",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node13 [id="edge12_Node000007_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="iterationStream.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$iteration_stream_8h.html",tooltip="Provides functionality for an iteration stream."];
  Node13 -> Node15 [id="edge13_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="comparable.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$comparable_8h.html",tooltip="Interface for objects that can be compared."];
  Node15 -> Node11 [id="edge14_Node000015_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="compare",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node13 -> Node17 [id="edge16_Node000013_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="printable.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$printable_8h.html",tooltip="Interface for polymorphic string formatting and output."];
  Node13 -> Node19 [id="edge17_Node000013_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="iterable.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iterable_8h.html",tooltip="Base interface for iterable container types."];
  Node19 -> Node20 [id="edge18_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="transform.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$transform_8h.html",tooltip="Transformation classes for various operations on elements."];
  Node20 -> Node8 [id="edge19_Node000020_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node21 [id="edge20_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="cloneable.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cloneable_8h.html",tooltip="Abstract base class for cloneable objects."];
  Node20 -> Node22 [id="edge21_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="maths.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$maths_8h.html",tooltip="Mathematical utilities and constants."];
  Node22 -> Node23 [id="edge22_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="error.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$error_8h.html",tooltip="Custom exception classes and callback validation utilities."];
  Node23 -> Node25 [id="edge23_Node000023_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="types.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$types_8h.html",tooltip="Type system foundations and concept definitions."];
  Node19 -> Node25 [id="edge24_Node000019_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node28 [id="edge25_Node000019_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="iterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$iterator_8h.html",tooltip="Defines the iterator class for traversing and manipulating container elements."];
  Node28 -> Node21 [id="edge26_Node000028_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node15 [id="edge27_Node000028_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node23 [id="edge28_Node000028_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node17 [id="edge29_Node000028_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node25 [id="edge30_Node000013_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node29 [id="edge31_Node000007_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="array.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$array_8h.html",tooltip="Provides the array class for a fixed-size container with random access."];
  Node29 -> Node30 [id="edge32_Node000029_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="initializer_list",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node29 -> Node11 [id="edge33_Node000029_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node31 [id="edge34_Node000029_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="baseArray.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$base_array_8h.html",tooltip="Provides a base class for fixed-size serial containers."];
  Node31 -> Node9 [id="edge35_Node000031_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node13 [id="edge36_Node000029_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node32 [id="edge37_Node000029_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="randomAccessIterator.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$random_access_iterator_8h.html",tooltip="Base class for random-access iterators."];
  Node32 -> Node10 [id="edge38_Node000032_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node23 [id="edge39_Node000032_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node28 [id="edge40_Node000032_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node23 [id="edge41_Node000029_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node34 [id="edge42_Node000004_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="filter.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$filter_8h.html",tooltip="Filter base class and derived filter classes for various matching operations."];
  Node34 -> Node21 [id="edge43_Node000034_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node28 [id="edge44_Node000004_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node25 [id="edge45_Node000004_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node29 [id="edge46_Node000003_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node35 [id="edge47_Node000003_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="autoPtr.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$auto_ptr_8h.html",tooltip="Base class for reference-counted smart pointers."];
  Node35 -> Node11 [id="edge48_Node000035_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node17 [id="edge49_Node000035_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node15 [id="edge50_Node000035_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node23 [id="edge51_Node000035_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node31 [id="edge52_Node000003_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node8 [id="edge53_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node36 [id="edge54_Node000003_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="bitSet.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bit_set_8h.html",tooltip="BitSet class declaration."];
  Node36 -> Node29 [id="edge55_Node000036_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node36 -> Node37 [id="edge56_Node000036_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="couple.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$couple_8h.html",tooltip="Generic pair container implementation."];
  Node37 -> Node17 [id="edge57_Node000037_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node15 [id="edge58_Node000037_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node25 [id="edge59_Node000037_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node23 [id="edge60_Node000037_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node36 -> Node13 [id="edge61_Node000036_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node38 [id="edge62_Node000003_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="blocksList.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$blocks_list_8h.html",tooltip="A block-based list implementation."];
  Node38 -> Node8 [id="edge63_Node000038_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node37 [id="edge64_Node000038_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node7 [id="edge65_Node000038_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node39 [id="edge66_Node000003_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="chain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$chain_8h.html",tooltip="Non-cyclic doubly linked list implementation."];
  Node39 -> Node40 [id="edge67_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="doubleDirectionIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$double_direction_iterator_8h.html",tooltip="Double-direction iterator base class."];
  Node40 -> Node41 [id="edge68_Node000040_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="stepIterator.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$step_iterator_8h.html",tooltip="Step iterator base class for single-step iterators."];
  Node41 -> Node28 [id="edge69_Node000041_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node42 [id="edge70_Node000041_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="wrapper.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$wrapper_8h.html",tooltip="Abstract polymorphic container with value encapsulation and navigation support."];
  Node42 -> Node17 [id="edge71_Node000042_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node23 [id="edge72_Node000041_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node22 [id="edge73_Node000041_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node29 [id="edge74_Node000039_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node8 [id="edge75_Node000039_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node13 [id="edge76_Node000039_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node21 [id="edge77_Node000003_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node15 [id="edge78_Node000003_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node44 [id="edge79_Node000003_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="comparator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$comparator_8h.html",tooltip="Comparator base class and concrete comparator classes."];
  Node44 -> Node25 [id="edge80_Node000044_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node11 [id="edge81_Node000003_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node10 [id="edge82_Node000003_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node45 [id="edge83_Node000003_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="containerAdapter.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container_adapter_8h.html",tooltip="Base class for container adapters with common interfaces."];
  Node45 -> Node8 [id="edge84_Node000045_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node25 [id="edge85_Node000045_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node17 [id="edge86_Node000045_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node15 [id="edge87_Node000045_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node37 [id="edge88_Node000003_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node46 [id="edge89_Node000003_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="deleter.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$deleter_8h.html",tooltip="Default deleters for resource management."];
  Node3 -> Node47 [id="edge90_Node000003_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="deque.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$deque_8h.html",tooltip="Double-ended queue (deque) container adapter implementation."];
  Node47 -> Node39 [id="edge91_Node000047_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node45 [id="edge92_Node000047_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node40 [id="edge93_Node000003_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node23 [id="edge94_Node000003_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node34 [id="edge95_Node000003_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node48 [id="edge96_Node000003_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="filterStream.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$filter_stream_8h.html",tooltip="Composite filter operations with logical chaining."];
  Node48 -> Node34 [id="edge97_Node000048_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node39 [id="edge98_Node000048_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node49 [id="edge99_Node000003_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="forwardChain.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$forward_chain_8h.html",tooltip="Non-cyclic singly linked list implementation."];
  Node49 -> Node50 [id="edge100_Node000049_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="singleDirectionIterator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$single_direction_iterator_8h.html",tooltip="Single-direction iterator base class."];
  Node50 -> Node41 [id="edge101_Node000050_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node29 [id="edge102_Node000049_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node8 [id="edge103_Node000049_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node19 [id="edge104_Node000003_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node13 [id="edge105_Node000003_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node28 [id="edge106_Node000003_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node22 [id="edge107_Node000003_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node51 [id="edge108_Node000003_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="ownerPtr.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$owner_ptr_8h.html",tooltip="Exclusive-ownership smart pointer implementation."];
  Node51 -> Node35 [id="edge109_Node000051_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node46 [id="edge110_Node000051_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node17 [id="edge111_Node000003_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node53 [id="edge112_Node000003_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="prique.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$prique_8h.html",tooltip="Priority queue container implementation."];
  Node53 -> Node4 [id="edge113_Node000053_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node38 [id="edge114_Node000053_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node44 [id="edge115_Node000053_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node45 [id="edge116_Node000053_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node25 [id="edge117_Node000053_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node54 [id="edge118_Node000003_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="queue.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$queue_8h.html",tooltip="Queue container adapter implementation."];
  Node54 -> Node45 [id="edge119_Node000054_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node39 [id="edge120_Node000054_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node32 [id="edge121_Node000003_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node55 [id="edge122_Node000003_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="refCntPtr.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ref_cnt_ptr_8h.html",tooltip="Reference-counted smart pointer hierarchy."];
  Node55 -> Node35 [id="edge123_Node000055_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node55 -> Node46 [id="edge124_Node000055_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node9 [id="edge125_Node000003_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node50 [id="edge126_Node000003_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node56 [id="edge127_Node000003_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="stack.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$stack_8h.html",tooltip="Stack container adapter implementation."];
  Node56 -> Node39 [id="edge128_Node000056_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node56 -> Node45 [id="edge129_Node000056_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node41 [id="edge130_Node000003_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node20 [id="edge131_Node000003_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node57 [id="edge132_Node000003_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="transformStream.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$transform_stream_8h.html",tooltip="Transform pipeline composition and execution."];
  Node57 -> Node20 [id="edge133_Node000057_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node39 [id="edge134_Node000057_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node58 [id="edge135_Node000003_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="tuple.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$tuple_8h.html",tooltip="Heterogeneous tuple container implementation."];
  Node58 -> Node17 [id="edge136_Node000058_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node15 [id="edge137_Node000058_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node37 [id="edge138_Node000058_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node58 -> Node25 [id="edge139_Node000058_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node25 [id="edge140_Node000003_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node7 [id="edge141_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node42 [id="edge142_Node000003_Node000042",color="steelblue1",style="solid",tooltip=" "];
}
